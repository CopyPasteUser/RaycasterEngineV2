package org.example;

public class GameMap {
    // WALLMAP
    private int[][] wallMap = {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
            {1,10, 0, 0, 0, 0, 0, 0, 2, 0, 2, 1},
            {1,37, 0, 0, 0, 0, 0, 0, 3, 0, 3, 1},
            {1,10, 0, 0, 0, 0, 0, 0, 4, 0, 4, 1},
            {1,15, 0, 0, 0, 0, 0, 0, 5, 0, 5, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 9, 0, 9, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 1},
            {1,38, 0,20, 0, 0, 0, 8, 7, 1, 9, 1},
            {1, 9, 9, 0,11,46, 0, 7, 0, 1, 6, 1},
            {1, 9, 9, 0,11,47, 0, 7, 0, 0, 6, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}

    };



    public int[][] getWallMap(){
        return wallMap;
    }

    public int getWallMapValue(int x, int y) {
        return wallMap[y][x]; // Annahme: wallMap ist in Zeilen und Spalten
    }



    public int getWidth() {
        return wallMap[0].length; // Breite der Karte
    }

    public int getHeight() {
        return wallMap.length; // HÃ¶he der Karte
    }

    //FLOORMAP
    private int[][] floorMap = {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 7, 7, 7, 1, 1, 1, 1, 1, 2, 1, 1},
            {1, 7, 7, 7, 1, 1, 1, 1, 1, 3, 1, 1},
            {1, 7, 7, 7, 1, 1, 1, 1, 1, 4, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    };
    public int[][] getFloorMap(){
        return floorMap;
    }

    public int getFloorMapValue(int x, int y) {
        return floorMap[y][x]; // Annahme: floorMap ist in Zeilen und Spalten
    }

    // CEILINGMAP

    private int[][] ceilingMap = {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    };
    public int[][] getCeilingMap(){
        return ceilingMap;
    }

    public int getCeilingMapValue(int x, int y) {
        return ceilingMap[y][x];
    }

    //HEIGHTMAP
    private double[][] heightMap = {
            {1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    };
    public double[][] getHeightMap(){
        return heightMap;
    }

    public double getHeightMapValue(int x, int y) {
        return heightMap[y][x];
    }

    //SHAPEMAP

    private int[][] shapeMap = {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    };
    public int[][] getShapeMap(){
        return shapeMap;
    }

    public int getShapeMapValue(int x, int y) {
        return shapeMap[y][x];
    }


}
